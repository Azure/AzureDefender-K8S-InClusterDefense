# Set arguments and default values
ARG LISTEN_PORT=8000

#### STEP 1- Build image ####
FROM golang:1.16-alpine
# Set env variables
ENV GOOS=linux \
    GOARCH=amd64

# ARG DEVOPS_TOKEN and ENV GOPRIVATE are used in order to import Tivan's instrumenation from private module in AzureDevOps.
# More detailes on why we need those varaible can be found in https://seb-nyberg.medium.com/using-go-modules-with-private-azure-devops-repositories-4664b621f782
ARG DEVOPS_TOKEN
# Tivan use dependency server for GO - https://dev.azure.com/msazure/One/_git/Rome-Detection-Tivan-GoDependenciesResolver
ENV GOPRIVATE "tivan.ms"

# compile gcc statically
ENV CGO_ENABLED=0
ENV GOROOT=/usr/local/go
# this path will be mounted in deploy-service.yaml
ENV GOPATH=${HOME}/go
ENV PATH=$PATH:${GOROOT}/bin
# Install git and get the latest version of delve via go
RUN apk update && apk add --no-cache \
    git && \
    go get github.com/go-delve/delve/cmd/dlv

# Config git to work with AzureDevOps and use DEVOPS_TOKEN token
RUN git config --global url."https://azure-defender:$DEVOPS_TOKEN@dev.azure.com".insteadOf "https://dev.azure.com"

# Create and set working directory - directories have to be in the match path of the packages in order to import them.
RUN mkdir -p /go/src/github.com/Azure/AzureDefender-K8S-InClusterDefense
WORKDIR /go/src/github.com/Azure/AzureDefender-K8S-InClusterDefense
# Copy dependancies files(mod/sum) and download them - will also be cached if we won't change mod/sum
# https://petomalina.medium.com/using-go-mod-download-to-speed-up-golang-docker-builds-707591336888
COPY go.mod .
COPY go.sum .

RUN go mod download
# Copy all go files when finish downloading all dependencies
COPY pkg/ pkg/
COPY cmd/ cmd/
COPY main.go main.go

# Expose port for webhook server
EXPOSE ${LISTEN_PORT}

# let's start delve as the entrypoint
ENTRYPOINT ["/go/bin/dlv", ".", "--listen=:30123", "--accept-multiclient", "--headless=true", "--api-version=2"]