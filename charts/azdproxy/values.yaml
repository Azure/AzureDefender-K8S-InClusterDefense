# Default values for AzDProxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
AzDProxy:
  # -- common prefix name for all resources.
  prefixResourceDeployment: azure-defender-proxy
  # Webhook values
  webhook:
    # -- Amount of replicas of azdproxy.
    replicas: 3
    # Image values:
    image:
      # -- Official image.
      name: "maayankblock.azurecr.io/azdproxy-image:latest"
      # -- Default for always. in case that you want to use local registry, change to 'Never'.
      pullPolicy: "Always"
    # -- The path that the webhook handler will be listening on.
    mutationPath: "/mutate"
    # Volume values of webhook.
    volume:
      # -- The name of the volume.
      name: "cert"
      # -- The mount path of the volume.
      mountPath: "/certs"
    # Configuration values of Cert Rotator.
    certRotatorConfiguration:
      # -- secret name
      secretName: "cert"
      # -- service name
      serviceName: "service"
      # -- webhook name
      webhookName: "mutating-webhook-configuration"
      # -- ca name
      caName: "ca"
    # Configuration values of server.
    serverConfiguration:
      # -- is the cert rotation enabled.
      enableCertRotation: true
    # Configuration values of handler.
    handlerConfiguration:
      # -- is the run on dry mode.
      runOnDryRunMode: false

    # -- The resources of the webhook.
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"

  # Values of mutation-configuration.yaml file:
  webhook_configuration:
    # -- Webhook timeout in seconds
    timeoutSeconds: 3

  # Values of service.yaml file.
  service:
    # -- The port on which the service will send requests to, so the webhook be listening on.
    targetPort: 8000

  # Values for App's configuration mounting.
  configuration:
    # Volume values of webhook.
    volume:
      # -- The name of the volume.
      name: "config"
      # -- The mount path of the volume.
      mountPath: "/config"
    # Path of the configuration file
    filePath: "/config/appConfig.yaml"

  # Instrumentation values
  instrumentation:

    # Tivan values
    tivan:
      # Values for Tivan's instrumentation configuration:
      tivanInstrumentationConfiguration:
        componentName: "azure-defender-proxy"
        azureResourceID: ""
        region: ""
        clusterDistribution: ""
        chartVersion: ""
        releaseTrain: ""
        nodeName: ""
        dirPath: "/var/log/azuredefender"
        mdmAccount: ""
        mdmNamespace: ""
        platformMdmAccount: ""
        platformMdmNamespace: ""

    # Trace values
    trace:
      # Values for tracer's configuration:
      tracerConfiguration:
        tracerLevel: 0

  # Azure Auth values
  azdIdentity:
    envAzureAuthorizerConfiguration:
      mSIClientId: ""

  kubeletIdentity:
    envAzureAuthorizerConfiguration:
      mSIClientId: ""

  deployment:
    isLocalDevelopment: false

  # ACR policy values
  acr:

    craneWrappers:
      retryPolicyConfiguration:
        # Number of retry attempts
        retryAttempts: 3
        # Sleep duration between retries (in milliseconds):
        retryDurationInMS: 10

    tokenExchanger:
      retryPolicyConfiguration:
        # Number of retry attempts
        retryAttempts: 3
        # Sleep duration between retries (in milliseconds):
        retryDurationInMS: 10

    acrTokenProviderConfiguration:
      # Expiration time IN MINUTES of registryRefreshToken in cache
      registryRefreshTokenCacheExpirationTime: 10 # 10 minutes

  # ARG values
  arg:

    argClientConfiguration:
      subscriptions: [ ]

    argBaseClient:
      retryPolicyConfiguration:
        # Number of retry attempts
        retryAttempts: 3
        # Sleep duration between retries (in milliseconds):
        retryDurationInMS: 100

    argDataProviderConfiguration:
      # Expiration time IN MINUTES of scan results in status unscanned in cache (redeploy will take at least a minute and scanning an image takes 4 minutes on average)
      cacheExpirationTimeUnscannedResults: 4 # 4 minute
      # Expiration time IN HOURS of scan results in status scanned in cache (need to sync with image-scan periodic scans - every 10 days)
      cacheExpirationTimeScannedResults: 24 # 24 hours

  # Tag2Digest configuration
  tag2digest:
    tag2DigestResolverConfiguration:
      # Expiration time IN MINUTES of digest in cache - changing image digest require editing source code, building image and pushing image. Longer than 2 minutes
      cacheExpirationTimeForResults: 2 # 2 minute

  # Cache configuration
  cache:
    redisClient:
      # Image of redis containers
      image: azuredefendermcrdev.azurecr.io/public/azuredefender/dev/in-cluster-defense-redis
      # -- amount of replicas of redis
      replicas: 1
      # -- the port that redis cache will be listened.
      port: 6379

      retryPolicyConfiguration:
        #  -- Number of retry attempts
        retryAttempts: 3
        #  -- Sleep duration between retries (in milliseconds):
        retryDurationInMS: 10

    argDataProviderCacheConfiguration:
      # TODO Change this address to helm function
      # -- Address that the redis client will listen to. set to redis service + the port of the service.
      address: "azure-defender-proxy-redis-service:6379"
      # -- The table (Db) that the argDataProviderCache will save to data.
      table: 0

    tokensCacheConfiguration:
      # -- In bytes, where 1024 * 1024 represents a single Megabyte, and 100 * 1024*1024 represents 100 Megabytes.
      cacheSize: 104857600 # 100 * 1024 * 1024

  azdSecInfoProvider:
    GetContainersVulnerabilityScanInfo:
      timeout:
        timeDurationInMS: 2850

    azdSecInfoProviderConfiguration:
      # Expiration time IN MINUTES of timeout status in cache - 15 minutes in order to avoid multiple timeouts
      CacheExpirationTimeTimeout: 15 # 15 minutes
      # Expiration time IN SECONDS of containerVulnerabilityScanInfo in cache - 30 seconds in order to handle multiple requests on the same pod.
      CacheExpirationContainerVulnerabilityScanInfo: 30 # 30 seconds