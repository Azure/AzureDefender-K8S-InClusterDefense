# Default values for AzDProxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
AzDProxy:
  # -- common prefix name for all resources.
  prefixResourceDeployment: azure-defender-proxy
  # Webhook values
  webhook:
    # -- Amount of replicas of azdproxy.
    replicas: 1
    # Image values:
    image:
      # -- Official image.
      name: "azdproxy-image"
      # -- Default for always. in case that you want to use local registry, change to 'Never'.
      pullPolicy: "Always"
    # -- The path that the webhook handler will be listening on.
    mutationPath: "/mutate"
    # Volume values of webhook.
    volume:
      # -- The name of the volume.
      name: "cert"
      # -- The mount path of the volume.
      mountPath: "/certs"
    # Configuration values of Cert Rotator.
    certRotatorConfiguration:
      # -- secret name
      secretName: "cert"
      # -- service name
      serviceName: "service"
      # -- webhook name
      webhookName: "mutating-webhook-configuration"
      # -- ca name
      caName: "ca"
    # Configuration values of server.
    serverConfiguration:
      # -- is the cert rotation enabled.
      enableCertRotation: true
    # Configuration values of handler.
    handlerConfiguration:
      # -- is the run on dry mode.
      runOnDryRunMode: false

    # -- The resources of the webhook.
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"

  # Values of mutation-configuration.yaml file:
  webhook_configuration:
    # -- Webhook timeout in seconds
    timeoutSeconds: 3

  # Values of service.yaml file.
  service:
    # -- The port on which the service will send requests to, so the webhook be listening on.
    targetPort: 8000

  # Values for App's configuration mounting.
  configuration:
    # Volume values of webhook.
    volume:
      # -- The name of the volume.
      name: "config"
      # -- The mount path of the volume.
      mountPath: "/config"
    # Path of the configuration file
    filePath: "/config/appConfig.yaml"

  # Instrumentation values
  instrumentation:

    # Tivan values
    tivan:
      # Values for Tivan's instrumentation configuration:
      tivanInstrumentationConfiguration:
        componentName: "azure-defender-proxy"
        azureResourceID: ""
        region: ""
        clusterDistribution: ""
        chartVersion: ""
        releaseTrain: ""
        nodeName: ""
        dirPath: "/var/log/azuredefender"
        mdmAccount: ""
        mdmNamespace: ""
        platformMdmAccount: ""
        platformMdmNamespace: ""

    # Trace values
    trace:
      # Values for tracer's configuration:
      tracerConfiguration:
        tracerLevel: 0

  # Azure Auth values
  azdIdentity:
    envAzureAuthorizerConfiguration:
      mSIClientId: ""

  kubeletIdentity:
    envAzureAuthorizerConfiguration:
      mSIClientId: ""

  deployment:
    isLocalDevelopment: false

  # ACR policy values
  acr:

    craneWrappers:
      retryPolicyConfiguration:
        # Number of retry attempts
        retryAttempts: 3
        # Sleep duration between retries (in milliseconds):
        retryDurationInMS: 10

    tokenExchanger:
      retryPolicyConfiguration:
        # Number of retry attempts
        retryAttempts: 3
        # Sleep duration between retries (in milliseconds):
        retryDurationInMS: 10

    acrTokenProviderConfiguration:
      # Expiration time IN MINUTES of registryRefreshToken in cache
      registryRefreshTokenCacheExpirationTime: 10 # 10 minutes

  # ARG values
  arg:

    argClientConfiguration:
      subscriptions: [ ]

    argBaseClient:
      retryPolicyConfiguration:
        # Number of retry attempts
        retryAttempts: 3
        # Sleep duration between retries (in milliseconds):
        retryDurationInMS: 100

    argDataProviderConfiguration:
      # Expiration time IN MINUTES of scan results in status unscanned in cache (redeploy will take at least a minute and scanning an image takes 4 minutes on average)
      cacheExpirationTimeUnscannedResults: 4 # 4 minute
      # Expiration time IN HOURS of scan results in status scanned in cache (need to sync with image-scan periodic scans - every 10 days)
      cacheExpirationTimeScannedResults: 24 # 24 hours

  # Tag2Digest configuration
  tag2digest:
    tag2DigestResolverConfiguration:
      # Expiration time IN MINUTES of digest in cache - changing image digest require editing source code, building image and pushing image. Longer than 2 minutes
      cacheExpirationTimeForResults: 2 # 2 minute

  # Cache configuration
  cache:
    pvc:
      storage: 1Gi
    redis:
      # Image of redis containers
      image: azuredefendermcrdev.azurecr.io/public/azuredefender/dev/in-cluster-defense-redis
      # -- amount of replicas of redis
      replicas: 2
      # -- the port that redis cache will be listened.
      port: 6379
      # TODO Change this address to helm function
      # -- Address that the redis client will listen to. set to redis service + the port of the service.
      host: "azure-defender-proxy-redis-service"
      # -- The table (Db) that the argDataProviderCache will save to data.
      table: 0
      # cert expire duration
      certs:
        expireDuration: 365
      redisConfig:
        # Automatic rewrite of the append only file.
        # Redis is able to automatically rewrite the log file implicitly calling
        # BGREWRITEAOF when the AOF log size will growth by the specified percentage.
        #
        # This is how it works: Redis remembers the size of the AOF file after the
        # latest rewrite (or if no rewrite happened since the restart, the size of
        # the AOF at startup is used).
        #
        # This base size is compared to the current size. If the current size is
        # bigger than the specified percentage, the rewrite is triggered. Also
        # you need to specify a minimal size for the AOF file to be rewritten, this
        # is useful to avoid rewriting the AOF file even if the percentage increase
        # is reached but it is still pretty small.
        #
        # Specify a precentage of zero in order to disable the automatic AOF
        # rewrite feature.
        autoAofRewritePercentage: 1
        autoAofRewriteMinSize: 1kb
        # Save the DB on disk:
        #
        #   save <seconds> <changes>
        #
        #   Will save the DB if both the given number of seconds and the given
        #   number of write operations against the DB occurred.
        #
        #   In the example below the behaviour will be to save:
        #   after 900 sec (15 min) if at least 1 key changed
        #   after 300 sec (5 min) if at least 10 keys changed
        #   after 60 sec if at least 10000 keys changed
        #
        #   Note: you can disable saving at all commenting all the "save" lines.
        appendonly: 'yes'
        save: 1 1
      volumes:
        # The secret values of the tls secret
        volumeSecretPass:
          # name of secret volume in redis deployment and webhook deployment
          name: "redis-pass"
          # name of secret mountPath in redis deployment and webhook deployment
          mountPath: /redis-pass
        # The redis config file volume
        volumeConfigFile:
          # -- The mount path of the redis config file in redis deployment - Don't change this value!
          mountPath: "/redis-master"
          # -- Volume name for redis config file.
          name: "config"
        # The secret volume of the tls secret
        volumeSecretTls:
          # name of secret volume in redis deployment and webhook deployment
          name: "redis-tls"
          # name of secret mountPath in redis deployment and webhook deployment
          mountPath: /tls
        # The pvc volume
        volumePVC:
          # -- Volume name for redis pvc.
          name: "redis-storage"

      retryPolicyConfiguration:
        #  -- Number of retry attempts
        retryAttempts: 3
        #  -- Sleep duration between retries (in milliseconds):
        retryDurationInMS: 10

    tokensCacheConfiguration:
      # -- In bytes, where 1024 * 1024 represents a single Megabyte, and 100 * 1024*1024 represents 100 Megabytes.
      cacheSize: 104857600 # 100 * 1024 * 1024

  azdSecInfoProvider:
    GetContainersVulnerabilityScanInfo:
      timeout:
        timeDurationInMS: 2850

    azdSecInfoProviderConfiguration:
      # Expiration time IN MINUTES of timeout status in cache - 15 minutes in order to avoid multiple timeouts
      CacheExpirationTimeTimeout: 15 # 15 minutes
      # Expiration time IN SECONDS of containerVulnerabilityScanInfo in cache - 30 seconds in order to handle multiple requests on the same pod.
      CacheExpirationContainerVulnerabilityScanInfo: 3000 # 30 seconds