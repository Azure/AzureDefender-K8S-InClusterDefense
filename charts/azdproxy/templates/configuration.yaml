# Default Configurations for AzureDefender-K8S-InClusterDefense.
# This is a ConfigMap file.
# Declare variables to be passed into configurations object of the project's files.
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Values.AzDProxy.prefixResourceDeployment}}-config
  namespace: '{{ .Release.Namespace }}'
  labels:
  {{ include "common.labels" . | indent 6 }}
# Application's configuration settings. Arranged by project's filesystem hierarchy
data:
  appConfig.yaml: |-
    webhook:
      certRotatorConfiguration:
        secretName: "{{ .Values.AzDProxy.prefixResourceDeployment }}-{{.Values.AzDProxy.webhook.certRotatorConfiguration.secretName }}"
        serviceName: "{{ .Values.AzDProxy.prefixResourceDeployment }}-{{.Values.AzDProxy.webhook.certRotatorConfiguration.serviceName }}"
        webhookName: "{{ .Values.AzDProxy.prefixResourceDeployment }}-{{.Values.AzDProxy.webhook.certRotatorConfiguration.webhookName }}"
        caName: "{{ .Values.AzDProxy.prefixResourceDeployment }}-{{.Values.AzDProxy.webhook.certRotatorConfiguration.caName }}"
        caOrganization: "{{ .Values.AzDProxy.prefixResourceDeployment }}"
        certDir: {{.Values.AzDProxy.webhook.volume.mountPath | quote}}
        namespace: {{.Release.Namespace | quote}}
      managerConfiguration:
        port: {{.Values.AzDProxy.service.targetPort}}
        certDir: {{.Values.AzDProxy.webhook.volume.mountPath | quote}}
      serverConfiguration:
        path: {{.Values.AzDProxy.webhook.mutationPath | quote}}
        enableCertRotation: {{.Values.AzDProxy.webhook.serverConfiguration.enableCertRotation}}
      handlerConfiguration:
        dryRun: {{.Values.AzDProxy.webhook.handlerConfiguration.runOnDryRunMode}}
    instrumentation:
      trace:
        tracerConfiguration:
          tracerLevel: {{.Values.AzDProxy.instrumentation.trace.tracerConfiguration.tracerLevel }}
      tivan:
        tivanInstrumentationConfiguration:
          componentName: {{ .Chart.Name | quote}}
          azureResourceID: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.azureResourceID | quote}}
          region: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.region | quote}}
          clusterDistribution: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.clusterDistribution | quote}}
          chartVersion: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.chartVersion | quote}}
          imageName: {{ .Values.AzDProxy.webhook.image.name | quote}}
          imageVersion: {{ .Values.AzDProxy.webhook.image.tag | quote}}
          releaseTrain: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.releaseTrain | quote}}
          nodeName: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.nodeName | quote}}
          dirPath: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.dirPath | quote}}
          mdmAccount: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.mdmAccount | quote}}
          mdmNamespace: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.mdmNamespace | quote}}
          platformMdmAccount: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.platformMdmAccount | quote}}
          platformMdmNamespace: {{ .Values.AzDProxy.instrumentation.tivan.tivanInstrumentationConfiguration.platformMdmNamespace | quote}}
    azdIdentity:
      envAzureAuthorizerConfiguration:
        mSIClientId: {{.Values.AzDProxy.azdIdentity.envAzureAuthorizerConfiguration.mSIClientId}}
    kubeletIdentity:
      envAzureAuthorizerConfiguration:
        mSIClientId: {{.Values.AzDProxy.kubeletIdentity.envAzureAuthorizerConfiguration.mSIClientId}}
    acr:
      craneWrappersConfiguration:
        retryPolicyConfiguration:
          retryAttempts: {{ .Values.AzDProxy.acr.craneWrappers.retryPolicyConfiguration.retryAttempts }}
          retryDuration: {{ .Values.AzDProxy.acr.craneWrappers.retryPolicyConfiguration.retryDuration }}
          timeUnit: {{ .Values.AzDProxy.acr.craneWrappers.retryPolicyConfiguration.timeUnit | quote}}

      tokenExchanger:
        retryPolicyConfiguration:
          retryAttempts: {{ .Values.AzDProxy.acr.craneWrappers.retryPolicyConfiguration.retryAttempts }}
          retryDuration: {{ .Values.AzDProxy.acr.craneWrappers.retryPolicyConfiguration.retryDuration }}
          timeUnit: {{ .Values.AzDProxy.acr.craneWrappers.retryPolicyConfiguration.timeUnit | quote}}

    arg:
      argClientConfiguration:
        subscriptions: {{ .Values.AzDProxy.arg.argClientConfiguration.subscriptions }}

      argBaseClient:
        retryPolicyConfiguration:
          retryAttempts: {{ .Values.AzDProxy.arg.argBaseClient.retryPolicyConfiguration.retryAttempts }}
          retryDuration: {{ .Values.AzDProxy.arg.argBaseClient.retryPolicyConfiguration.retryDuration }}
          timeUnit: {{ .Values.AzDProxy.arg.argBaseClient.retryPolicyConfiguration.timeUnit | quote}}

    # Cache configuration
    cache:

      redisClient:
        replicas: {{.Values.AzDProxy.cache.redisClient.replicas}}
        port: {{.Values.AzDProxy.cache.redisClient.port}}
        targetport: {{.Values.AzDProxy.cache.redisClient.port}}
        retryPolicyConfiguration:
          retryAttempts: {{ .Values.AzDProxy.cache.redisClient.retryPolicyConfiguration.retryAttempts }}
          retryDuration: {{ .Values.AzDProxy.cache.redisClient.retryPolicyConfiguration.retryDuration }}
          timeUnit: {{ .Values.AzDProxy.cache.redisClient.retryPolicyConfiguration.timeUnit }}

      argDataProviderCacheConfiguration:
        address: {{.Values.AzDProxy.cache.argDataProviderCacheConfiguration.address}}
        table: {{.Values.AzDProxy.cache.argDataProviderCacheConfiguration.table}}

      tokensCacheConfiguration:
        cacheSize: {{.Values.AzDProxy.cache.tokensCacheConfiguration.cacheSize}} # in Bytes
    deployment:
      isLocalDevelopment:  {{ .Values.AzDProxy.deployment.isLocalDevelopment }}
      namespace: {{ .Release.Namespace | quote}}

    azdSecInfoProvider:
      argDataProviderTimeoutConfiguration:
        timeDuration: {{ .Values.AzDProxy.arg.timeout.timeDuration }}
        timeUnit: {{ .Values.AzDProxy.arg.timeout.timeUnit }}

      tag2DigestTimeoutConfiguration:
        timeDuration: {{ .Values.AzDProxy.acr.timeout.timeDuration }}
        timeUnit: {{ .Values.AzDProxy.acr.timeout.timeUnit }}