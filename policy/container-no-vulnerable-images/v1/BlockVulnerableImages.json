{
  "properties": {
    "displayName": "[Preview]: Kubernetes clusters should gate deployment of vulnerable images",
    "policyType": "BuiltIn",
    "mode": "Microsoft.Kubernetes.Data",
    "description": "Protect your Kubernetes clusters and container workloads from potential threats by restricting deployment of container images with vulnerable software components. Use Azure Defender CI/CD scanning (https://docs.microsoft.com/en-us/azure/security-center/defender-for-container-registries-cicd) and Azure defender for container registries (https://docs.microsoft.com/en-us/azure/security-center/defender-for-container-registries-usage) to identify and patch vulnerabilities prior to deployment.",
    "metadata": {
      "version": "1.0.0-preview",
      "category": "Kubernetes",
      "preview": true
    },
    "parameters": {
      "effect": {
        "type": "String",
        "metadata": {
          "displayName": "Effect",
          "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
        },
        "allowedValues": [
          "audit",
          "deny",
          "disabled"
        ],
        "defaultValue": "audit"
      },
      "excludedNamespaces": {
        "type": "Array",
        "metadata": {
          "displayName": "Namespace exclusions",
          "description": "List of Kubernetes namespaces to exclude from policy evaluation."
        },
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc"
        ]
      },
      "namespaces": {
        "type": "Array",
        "metadata": {
          "displayName": "Namespace inclusions",
          "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
        },
        "defaultValue": []
      },
      "labelSelector": {
        "type": "Object",
        "metadata": {
          "displayName": "Kubernetes label selector",
          "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
        },
        "defaultValue": {},
        "schema": {
          "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
          "type": "object",
          "properties": {
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "minProperties": 1
            },
            "matchExpressions": {
              "description": "matchExpressions is a list of values, a key, and an operator.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.",
                    "type": "string",
                    "enum": [
                      "In",
                      "NotIn",
                      "Exists",
                      "DoesNotExist"
                    ]
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "key",
                  "operator"
                ],
                "additionalProperties": false
              },
              "minItems": 1
            }
          },
          "additionalProperties": false
        }
      },
      "excludedImages": {
        "type": "Array",
        "metadata": {
          "displayName": "Excluded images regex",
          "description": "A list of RegEx rules used to exclude container images from policy evaluation. For example: exclude all images from the repo azure-defender-in-cluster-defense-repo in the blockreg ACR -  [\\\"(blockreg.azurecr.io/azure-defender-in-cluster-defense-repo).*\\\"]. Use an empty list to apply this policy to all container images."
        },
        "defaultValue": []
      },
      "severityThresholdForExcludingNotPatchableFindings": {
        "type": "string",
        "metadata": {
          "displayName": "Severity threshold for excluding vulnerabilities without a patch",
          "description": "Specify the maximum severity for exempting vulnerabilities without a patch. For example, specify Medium to ignore Low and Medium vulnerabilities without a patch."
        },
        "allowedValues": [
          "None",
          "Low",
          "Medium",
          "High"
        ],
        "defaultValue": "None"
      },
      "excludeFindingIDs": {
        "type": "Array",
        "metadata": {
          "displayName": "Exclude findings Ids",
          "description": "A list of finding IDs that the policy should exempt."
        },
        "defaultValue": []
      },
      "highSeverityThreshold": {
        "type": "int",
        "metadata": {
          "displayName": "High severity threshold",
          "description": "The number of allowed high severity findings for an image."
        },
        "defaultValue": 0
      },
      "mediumSeverityThreshold": {
        "type": "int",
        "metadata": {
          "displayName": "Medium severity threshold",
          "description": "The number of allowed medium severity findings for an image."
        },
        "defaultValue": 0
      },
      "lowSeverityThreshold": {
        "type": "int",
        "metadata": {
          "displayName": "Low severity threshold",
          "description": "The number of allowed low severity findings for an image."
        },
        "defaultValue": 0
      }
    },
    "policyRule": {
      "if": {
        "field": "type",
        "in": [
          "AKS Engine",
          "Microsoft.Kubernetes/connectedClusters",
          "Microsoft.ContainerService/managedClusters"
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "constraintTemplate": "https://store.policy.core.windows.net/kubernetes/block-vulnerables-images/v1/template.yaml",
          "constraint": "https://store.policy.core.windows.net/kubernetes/block-vulnerables-images/v1/constraint.yaml",
          "excludedNamespaces": "[parameters('excludedNamespaces')]",
          "namespaces": "[parameters('namespaces')]",
          "labelSelector": "[parameters('labelSelector')]",
          "values": {
            "excludedImages": "[parameters('excludedImages')]",
            "severityThresholdForExcludingNotPatchableFindings": "[parameters('severityThresholdForExcludingNotPatchableFindings')]",
            "excludeFindingIDs": "[parameters('excludeFindingIDs')]",
            "highSeverityThreshold": "[parameters('highSeverityThreshold')]",
            "mediumSeverityThreshold": "[parameters('mediumSeverityThreshold')]",
            "lowSeverityThreshold": "[parameters('lowSeverityThreshold')]"
          }
        }
      }
    }
  },
  "id": "/providers/Microsoft.Authorization/policyDefinitions/13cd7ae3-5bc0-4ac4-a62d-4f7c120b9759",
  "type": "Microsoft.Authorization/policyDefinitions",
  "name": "13cd7ae3-5bc0-4ac4-a62d-4f7c120b9759"
}