// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	contracts "github.com/Azure/AzureDefender-K8S-InClusterDefense/pkg/azdsecinfo/contracts"
	mock "github.com/stretchr/testify/mock"
)

// IARGDataProvider is an autogenerated mock type for the IARGDataProvider type
type IARGDataProvider struct {
	mock.Mock
}

// GetImageVulnerabilityScanResults provides a mock function with given fields: registry, repository, digest
func (_m *IARGDataProvider) GetImageVulnerabilityScanResults(registry string, repository string, digest string) (contracts.ScanStatus, []*contracts.ScanFinding, error) {
	ret := _m.Called(registry, repository, digest)

	var r0 contracts.ScanStatus
	if rf, ok := ret.Get(0).(func(string, string, string) contracts.ScanStatus); ok {
		r0 = rf(registry, repository, digest)
	} else {
		r0 = ret.Get(0).(contracts.ScanStatus)
	}

	var r1 []*contracts.ScanFinding
	if rf, ok := ret.Get(1).(func(string, string, string) []*contracts.ScanFinding); ok {
		r1 = rf(registry, repository, digest)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]*contracts.ScanFinding)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string, string, string) error); ok {
		r2 = rf(registry, repository, digest)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
