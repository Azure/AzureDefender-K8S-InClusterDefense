// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	retrypolicy "github.com/Azure/AzureDefender-K8S-InClusterDefense/pkg/infra/retrypolicy"
	mock "github.com/stretchr/testify/mock"
)

// IRetryPolicy is an autogenerated mock type for the IRetryPolicy type
type IRetryPolicy struct {
	mock.Mock
}

// RetryAction provides a mock function with given fields: action, handle
func (_m *IRetryPolicy) RetryAction(action retrypolicy.Action, handle retrypolicy.ShouldRetryOnSpecificError) error {
	ret := _m.Called(action, handle)

	var r0 error
	if rf, ok := ret.Get(0).(func(retrypolicy.Action, retrypolicy.ShouldRetryOnSpecificError) error); ok {
		r0 = rf(action, handle)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RetryActionString provides a mock function with given fields: action, handle
func (_m *IRetryPolicy) RetryActionString(action retrypolicy.ActionString, handle retrypolicy.ShouldRetryOnSpecificError) (string, error) {
	ret := _m.Called(action, handle)

	var r0 string
	if rf, ok := ret.Get(0).(func(retrypolicy.ActionString, retrypolicy.ShouldRetryOnSpecificError) string); ok {
		r0 = rf(action, handle)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(retrypolicy.ActionString, retrypolicy.ShouldRetryOnSpecificError) error); ok {
		r1 = rf(action, handle)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
